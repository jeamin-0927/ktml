{
  "version": 3,
  "sources": ["../../src/utils/readFile.ts"],
  "sourcesContent": ["import { promises as fs } from \"fs\";\nimport { File } from \"./types\";\n\nconst readFile = async ( \n\tpath: string,\n\textension: string\n): Promise<File[]> => {\n\tconst list: File[] = [];\n\tpath = path.replace(\"/\", \"\");\n\tconst check = async ( innerPath: string ) => {\n\t\ttry{\n\t\t\tconst files = await fs.readdir(innerPath);\n\t\t\tfor (const file of files) {\n\t\t\t\tconst filePath = `${innerPath}/${file}`;\n\t\t\t\tconst stat = await fs.stat(filePath);\n\t\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tawait check(filePath);\n\t\t\t\t\tcontinue;\n\t\t\t\t} \n\t\n\t\t\t\tif (file.split('.').pop() !== extension) continue;\n\t\n\t\t\t\tlist.push({\n\t\t\t\t\tfilePath: filePath.replace(path, \"\"),\n\t\t\t\t\tcontent: (await fs.readFile(filePath, 'utf-8')).replace(/\\r?\\n|\\t|\\r/g, \"\")\n\t\t\t\t});\n\n\t\t\t\tconsole.log(`\uD83D\uDCDA \uC77D\uAE30 :: ./${filePath} (${list[list.length - 1].content.length.toLocaleString()} \uBC14\uC774\uD2B8)`);\n\t\t\t}\n\t\t}\n\t\tcatch(err: any) {\n\t\t\tconsole.error(`\uD83D\uDCDA \uC77D\uAE30 :: \uC624\uB958: ${err.message}`);\n\t\t}\n\t}\n\tawait check(path);\n\tconsole.log(`\uD83D\uDCDA \uC77D\uAE30 :: ${list.length.toLocaleString()}\uAC1C\uC758 \uD30C\uC77C\uC744 \uC77D\uC5C8\uC5B4\uC694.`);\n\tconsole.log();\n\n\treturn list;\n};\n\nexport default readFile;\n"],
  "mappings": "AAAA,OAAS,YAAYA,MAAU,KAG/B,IAAMC,EAAW,MAChBC,EACAC,IACqB,CACrB,IAAMC,EAAe,CAAC,EACtBF,EAAOA,EAAK,QAAQ,IAAK,EAAE,EAC3B,IAAMG,EAAQ,MAAQC,GAAuB,CAC5C,GAAG,CACF,IAAMC,EAAQ,MAAMP,EAAG,QAAQM,CAAS,EACxC,QAAWE,KAAQD,EAAO,CACzB,IAAME,EAAW,GAAGH,CAAS,IAAIE,CAAI,GAGrC,IAFa,MAAMR,EAAG,KAAKS,CAAQ,GAE1B,YAAY,EAAG,CACvB,MAAMJ,EAAMI,CAAQ,EACpB,QACD,CAEID,EAAK,MAAM,GAAG,EAAE,IAAI,IAAML,IAE9BC,EAAK,KAAK,CACT,SAAUK,EAAS,QAAQP,EAAM,EAAE,EACnC,SAAU,MAAMF,EAAG,SAASS,EAAU,OAAO,GAAG,QAAQ,eAAgB,EAAE,CAC3E,CAAC,EAED,QAAQ,IAAI,+BAAcA,CAAQ,KAAKL,EAAKA,EAAK,OAAS,CAAC,EAAE,QAAQ,OAAO,eAAe,CAAC,sBAAO,EACpG,CACD,OACMM,EAAU,CACf,QAAQ,MAAM,2CAAgBA,EAAI,OAAO,EAAE,CAC5C,CACD,EACA,aAAML,EAAMH,CAAI,EAChB,QAAQ,IAAI,6BAAYE,EAAK,OAAO,eAAe,CAAC,2DAAc,EAClE,QAAQ,IAAI,EAELA,CACR,EAEOO,EAAQV",
  "names": ["fs", "readFile", "path", "extension", "list", "check", "innerPath", "files", "file", "filePath", "err", "readFile_default"]
}

{
  "version": 3,
  "sources": ["../../src/utils/writeFile.ts"],
  "sourcesContent": ["import type { File } from \"./types\";\n\nimport { promises as fs } from \"fs\";\n\nconst writeFile = async ( \n  path: string,\n  list: File[],\n  oldExtension: string,\n  newExtension: string\n) => {\n  try{\n    const copy = [...list];\n    path = path.replace(\"/\", \"\");\n    try{\n      await fs.rm(\"./build\", { recursive: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catch(e: any) {\n      console.error(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: \uC624\uB958: ${e.message}`);\n    }  \n    for(const file of copy) {\n      const filePath = `./build${file.filePath.replace(new RegExp(oldExtension, \"g\"), newExtension)}`;\n      const content = file.content;\n      await fs.mkdir(filePath.replace(/\\/[^/]+$/, \"\"), { recursive: true });\n      await fs.writeFile(filePath, content);\n      console.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${filePath} (${content.length.toLocaleString()} \uBC14\uC774\uD2B8)`);\n    }\n    console.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${copy.length}\uAC1C\uC758 \uD30C\uC77C\uC744 \uB9CC\uB4E4\uC5C8\uC5B4\uC694.\\n`);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  catch(e: any) {\n    console.error(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: \uC624\uB958: ${e.message}`);\n  }\n};\n\nexport default writeFile;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAA+B;AAE/B,IAAM,YAAY,OAChB,MACA,MACA,cACA,iBACG;AACH,MAAG;AACD,UAAM,OAAO,CAAC,GAAG,IAAI;AACrB,WAAO,KAAK,QAAQ,KAAK,EAAE;AAC3B,QAAG;AACD,YAAM,UAAAA,SAAG,GAAG,WAAW,EAAE,WAAW,KAAK,CAAC;AAAA,IAC5C,SAEM,GAAQ;AACZ,cAAQ,MAAM,iDAAiB,EAAE,OAAO,EAAE;AAAA,IAC5C;AACA,eAAU,QAAQ,MAAM;AACtB,YAAM,WAAW,UAAU,KAAK,SAAS,QAAQ,IAAI,OAAO,cAAc,GAAG,GAAG,YAAY,CAAC;AAC7F,YAAM,UAAU,KAAK;AACrB,YAAM,UAAAA,SAAG,MAAM,SAAS,QAAQ,YAAY,EAAE,GAAG,EAAE,WAAW,KAAK,CAAC;AACpE,YAAM,UAAAA,SAAG,UAAU,UAAU,OAAO;AACpC,cAAQ,IAAI,mCAAa,QAAQ,KAAK,QAAQ,OAAO,eAAe,CAAC,sBAAO;AAAA,IAC9E;AACA,YAAQ,IAAI,mCAAa,KAAK,MAAM;AAAA,CAAiB;AAAA,EACvD,SAEM,GAAQ;AACZ,YAAQ,MAAM,iDAAiB,EAAE,OAAO,EAAE;AAAA,EAC5C;AACF;AAEA,IAAO,oBAAQ;",
  "names": ["fs"]
}

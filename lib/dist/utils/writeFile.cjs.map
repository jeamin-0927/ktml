{
  "version": 3,
  "sources": ["../../src/utils/writeFile.ts"],
  "sourcesContent": ["import { promises as fs } from \"fs\";\n\nimport { File } from \"./types\";\n\nconst writeFile = async ( \n  path: string,\n  list: File[],\n  oldExtension: string,\n  newExtension: string\n) => {\n  try{\n    const copy = [...list];\n    path = path.replace(\"/\", \"\");\n\n    try{\n      await fs.rm(`./build`, { recursive: true });\n    }\n    catch(e) {\n      // console.log(e);\n    }  \n\n    for(const file of copy) {\n      const filePath = `./build${file.filePath.replace(new RegExp(oldExtension, \"g\"), newExtension)}`;\n\n      const content = file.content;\n\n      await fs.mkdir(filePath.replace(/\\/[^/]+$/, \"\"), { recursive: true });\n      await fs.writeFile(filePath, content);\n\n      console.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${filePath} (${content.length.toLocaleString()} \uBC14\uC774\uD2B8)`);\n    }\n\n    console.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${copy.length}\uAC1C\uC758 \uD30C\uC77C\uC744 \uB9CC\uB4E4\uC5C8\uC5B4\uC694.`);\n    console.log();\n  }\n  catch(e: any) {\n    console.error(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: \uC624\uB958: ${e.message}`);\n  }\n};\n\nexport default writeFile;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+B;AAI/B,IAAM,YAAY,OAChB,MACA,MACA,cACA,iBACG;AACH,MAAG;AACD,UAAM,OAAO,CAAC,GAAG,IAAI;AACrB,WAAO,KAAK,QAAQ,KAAK,EAAE;AAE3B,QAAG;AACD,YAAM,UAAAA,SAAG,GAAG,WAAW,EAAE,WAAW,KAAK,CAAC;AAAA,IAC5C,SACM,GAAG;AAAA,IAET;AAEA,eAAU,QAAQ,MAAM;AACtB,YAAM,WAAW,UAAU,KAAK,SAAS,QAAQ,IAAI,OAAO,cAAc,GAAG,GAAG,YAAY,CAAC;AAE7F,YAAM,UAAU,KAAK;AAErB,YAAM,UAAAA,SAAG,MAAM,SAAS,QAAQ,YAAY,EAAE,GAAG,EAAE,WAAW,KAAK,CAAC;AACpE,YAAM,UAAAA,SAAG,UAAU,UAAU,OAAO;AAEpC,cAAQ,IAAI,mCAAa,QAAQ,KAAK,QAAQ,OAAO,eAAe,CAAC,sBAAO;AAAA,IAC9E;AAEA,YAAQ,IAAI,mCAAa,KAAK,MAAM,iEAAe;AACnD,YAAQ,IAAI;AAAA,EACd,SACM,GAAQ;AACZ,YAAQ,MAAM,iDAAiB,EAAE,OAAO,EAAE;AAAA,EAC5C;AACF;AAEA,IAAO,oBAAQ;",
  "names": ["fs"]
}

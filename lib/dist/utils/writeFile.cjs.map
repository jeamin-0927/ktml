{
  "version": 3,
  "sources": ["../../src/utils/writeFile.ts"],
  "sourcesContent": ["import { promises as fs } from \"fs\";\nimport { File } from \"./types\";\n\nconst writeFile = async ( \n\tpath: string,\n\tlist: File[],\n\toldExtension: string,\n\tnewExtension: string\n) => {\n\ttry{\n\t\tconst copy = [...list];\n\t\tpath = path.replace(\"/\", \"\");\n\n\t\ttry{\n\t\t\tawait fs.rm(`./build`, { recursive: true });\n\t\t}\n\t\tcatch(e) {\n\t\t\t// console.log(e);\n\t\t}\t\n\n\t\tfor(const file of copy) {\n\t\t\tconst filePath = `./build${file.filePath.replace(new RegExp(oldExtension, \"g\"), newExtension)}`;\n\n\t\t\tconst content = file.content;\n\n\t\t\tawait fs.mkdir(filePath.replace(/\\/[^/]+$/, \"\"), { recursive: true });\n\t\t\tawait fs.writeFile(filePath, content);\n\n\t\t\tconsole.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${filePath} (${content.length.toLocaleString()} \uBC14\uC774\uD2B8)`);\n\t\t}\n\n\t\tconsole.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${copy.length}\uAC1C\uC758 \uD30C\uC77C\uC744 \uB9CC\uB4E4\uC5C8\uC5B4\uC694.`);\n\t\tconsole.log();\n\t}\n\tcatch(e: any) {\n\t\tconsole.error(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: \uC624\uB958: ${e.message}`);\n\t}\n};\n\nexport default writeFile;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+B;AAG/B,IAAM,YAAY,OACjB,MACA,MACA,cACA,iBACI;AACJ,MAAG;AACF,UAAM,OAAO,CAAC,GAAG,IAAI;AACrB,WAAO,KAAK,QAAQ,KAAK,EAAE;AAE3B,QAAG;AACF,YAAM,UAAAA,SAAG,GAAG,WAAW,EAAE,WAAW,KAAK,CAAC;AAAA,IAC3C,SACM,GAAG;AAAA,IAET;AAEA,eAAU,QAAQ,MAAM;AACvB,YAAM,WAAW,UAAU,KAAK,SAAS,QAAQ,IAAI,OAAO,cAAc,GAAG,GAAG,YAAY,CAAC;AAE7F,YAAM,UAAU,KAAK;AAErB,YAAM,UAAAA,SAAG,MAAM,SAAS,QAAQ,YAAY,EAAE,GAAG,EAAE,WAAW,KAAK,CAAC;AACpE,YAAM,UAAAA,SAAG,UAAU,UAAU,OAAO;AAEpC,cAAQ,IAAI,mCAAa,QAAQ,KAAK,QAAQ,OAAO,eAAe,CAAC,sBAAO;AAAA,IAC7E;AAEA,YAAQ,IAAI,mCAAa,KAAK,MAAM,iEAAe;AACnD,YAAQ,IAAI;AAAA,EACb,SACM,GAAQ;AACb,YAAQ,MAAM,iDAAiB,EAAE,OAAO,EAAE;AAAA,EAC3C;AACD;AAEA,IAAO,oBAAQ;",
  "names": ["fs"]
}

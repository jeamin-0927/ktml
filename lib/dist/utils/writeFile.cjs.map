{
  "version": 3,
  "sources": ["../../src/utils/writeFile.ts"],
  "sourcesContent": ["import { promises as fs } from \"fs\";\nimport { File } from \"./types\";\n\nconst writeFile = async ( \n\tpath: string,\n\tlist: File[],\n\toldExtension: string,\n\tnewExtension: string\n) => {\n\ttry{\n\t\tconst copy = [...list];\n\t\tpath = path.replace(\"/\", \"\");\n\n\t\ttry{\n\t\t\tawait fs.rm(`./build`, { recursive: true });\n\t\t}\n\t\tcatch(e) {\n\t\t\t// console.log(e);\n\t\t}\t\n\n\t\tfor(const file of copy) {\n\t\t\tconst filePath = `./build${file.filePath.replace(new RegExp(oldExtension, \"g\"), newExtension)}`;\n\n\t\t\tconst content = file.content;\n\n\t\t\tawait fs.mkdir(filePath.replace(/\\/[^/]+$/, \"\"), { recursive: true });\n\t\t\tawait fs.writeFile(filePath, content);\n\n\t\t\tconsole.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${filePath} (${content.length.toLocaleString()} \uBC14\uC774\uD2B8)`);\n\t\t}\n\n\t\tconsole.log(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: ${copy.length}\uAC1C\uC758 \uD30C\uC77C\uC744 \uB9CC\uB4E4\uC5C8\uC5B4\uC694.`);\n\t\tconsole.log();\n\t}\n\tcatch(e: any) {\n\t\tconsole.error(`\uD83D\uDCE6 \uB9CC\uB4E4\uAE30 :: \uC624\uB958: ${e.message}`);\n\t}\n};\n\nexport default writeFile;\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA+B,cAGzBC,EAAY,MACjBC,EACAC,EACAC,EACAC,IACI,CACJ,GAAG,CACF,IAAMC,EAAO,CAAC,GAAGH,CAAI,EACrBD,EAAOA,EAAK,QAAQ,IAAK,EAAE,EAE3B,GAAG,CACF,MAAM,EAAAK,SAAG,GAAG,UAAW,CAAE,UAAW,EAAK,CAAC,CAC3C,MACS,CAET,CAEA,QAAUC,KAAQF,EAAM,CACvB,IAAMG,EAAW,UAAUD,EAAK,SAAS,QAAQ,IAAI,OAAOJ,EAAc,GAAG,EAAGC,CAAY,CAAC,GAEvFK,EAAUF,EAAK,QAErB,MAAM,EAAAD,SAAG,MAAME,EAAS,QAAQ,WAAY,EAAE,EAAG,CAAE,UAAW,EAAK,CAAC,EACpE,MAAM,EAAAF,SAAG,UAAUE,EAAUC,CAAO,EAEpC,QAAQ,IAAI,mCAAaD,CAAQ,KAAKC,EAAQ,OAAO,eAAe,CAAC,sBAAO,CAC7E,CAEA,QAAQ,IAAI,mCAAaJ,EAAK,MAAM,iEAAe,EACnD,QAAQ,IAAI,CACb,OACMK,EAAQ,CACb,QAAQ,MAAM,iDAAiBA,EAAE,OAAO,EAAE,CAC3C,CACD,EAEOb,EAAQG",
  "names": ["writeFile_exports", "__export", "writeFile_default", "__toCommonJS", "import_fs", "writeFile", "path", "list", "oldExtension", "newExtension", "copy", "fs", "file", "filePath", "content", "e"]
}
